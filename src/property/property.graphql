enum PropertyType {
  APARTMENT
  HOUSE
  ROOM
  VILLA
  OFFICE
  STUDIO
  DUPLEX
  LAND
}

enum PropertyStatus {
  AVAILABLE
  SOLD
  RENTED
  PENDING
}

type Property {
  id: Int!
  propertyName: String!
  propertyType: PropertyType!
  description: String
  price: Float!
  isForRent: Boolean!
  isForSale: Boolean!
  bedrooms: Int!
  bathrooms: Int!
  kitchen: Int!
  floor: Int!
  furnishing: String
  area: Float
  city: String!
  state: String!
  country: String!
  address: String!
  landmark: String
  latitude: Float
  longitude: Float
  status: PropertyStatus!
  isActive: Boolean!
  isFeatured: Boolean!
  agentId: Int!
  createdAt: String!
  updatedAt: String!
}

input CreatePropertyInput {
  propertyName: String!
  propertyType: PropertyType!
  description: String
  price: Float!
  isForRent: Boolean!
  isForSale: Boolean!
  bedrooms: Int!
  bathrooms: Int!
  kitchen: Int!
  floor: Int!
  furnishing: String
  area: Float
  city: String!
  state: String!
  country: String!
  address: String!
  landmark: String
  latitude: Float
  longitude: Float
  status: PropertyStatus = AVAILABLE
  isActive: Boolean = true
  isFeatured: Boolean = false
  agentId: Int!
}

input UpdatePropertyInput {
  id: Int!
  propertyName: String
  propertyType: PropertyType
  description: String
  price: Float
  isForRent: Boolean
  isForSale: Boolean
  bedrooms: Int
  bathrooms: Int
  kitchen: Int
  floor: Int
  furnishing: String
  area: Float
  city: String
  state: String
  country: String
  address: String
  landmark: String
  latitude: Float
  longitude: Float
  status: PropertyStatus
  isActive: Boolean
  isFeatured: Boolean
  agentId: Int
}

input PaginationInput {
  skip: Int = 0
  take: Int = 10
}

type PaginatedPropertyData {
  items: [Property!]!
  totalItems: Int!
}

type PropertyResponse {
  success: Boolean!
  message: String!
  data: Property
}

type PaginatedPropertyResponse {
  success: Boolean!
  message: String!
  data: PaginatedPropertyData
}

type MutationResponse {
  success: Boolean!
  message: String!
}

type Query {
  property(id: Int!): PropertyResponse!
  properties(options: PaginationInput): PaginatedPropertyResponse!
}

type Mutation {
  createProperty(input: CreatePropertyInput!): PropertyResponse!
  updateProperty(input: UpdatePropertyInput!): PropertyResponse!
  removeProperty(id: Int!): MutationResponse!
}
